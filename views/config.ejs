<h1><%= getText('edit_config') %></h1>

<div class="row" v-show="!loading" style="display: none;">
  <div class="col-xs-6">


    <button type="button" @click="switchTab('admin')" :class="[getTabClass('admin')]" class="btn">
      <%= getText('config_categories.admin') %>
    </button>

    <button type="button" @click="switchTab('tech')" :class="[getTabClass('tech')]" class="btn">
      <%= getText('config_categories.tech') %>
    </button>

    <button type="button" @click="switchTab('assessment')" :class="[getTabClass('assessment')]" class="btn">
      <%= getText('config_categories.assessment') %>
    </button>


    <form id="user" autocomplete="off">

      <div v-for="(fieldSet, fIndex) in adminSettings" v-show="activeTab === 'admin'" v-if="fieldSet.visible !== 0">
        <h3>{{window.signs[fieldSet.name]}}</h3>

        <div class="form-group" v-for="(property, pIndex) in fieldSet.properties">
          <label :for="getFieldIndex(fIndex, pIndex)">
            {{window.signs[property.name]}}
          </label>

          <input
            min="0"
            type="number"
            class="form-control"
            v-model="property.value"
            v-if="property.element.type === 'number'"
            :id="getFieldIndex(fIndex, pIndex)"
          >

          <input
            type="text"
            class="form-control"
            v-model="property.value"
            v-if="property.element.type === 'text'"
            :id="getFieldIndex(fIndex, pIndex)"
          >

          <select
            class="form-control"
            v-model="property.value"
            v-if="property.element.type === 'select'"
            :id="getFieldIndex(fIndex, pIndex)"
          >
            <option v-for="(text, value) in property.element.options" :value="value">
              {{window.signs[text]}}
            </option>
          </select>


          <div v-if="property.id === 'allowedDatasets'" class="datasets-container">
            <div class="form-check-label dataset-item" v-for="(dataset, index) in availableDataSets">
              <input
                :id="getDataSetIndex('dataset', index)"
                class="form-check-input"
                type="checkbox"
                v-model="dataset.isActive"
              >
              <label :for="getDataSetIndex('dataset', index)">{{dataset._id}}</label>
            </div>

            <div class="actions-container">
              <button type="button" @click="setDataSetsStatus(true)" class="btn btn-success">
                <%= getText('check_all') %>
              </button>

              <button type="button" @click="setDataSetsStatus(false)" class="btn btn-success">
                <%= getText('uncheck_all') %>
              </button>
            </div>
          </div>

        </div>
      </div>

      <div v-for="(fieldSet, fIndex) in techSettings" v-show="activeTab === 'tech'" v-if="fieldSet.visible !== 0">
        <h3>{{window.signs[fieldSet.name]}}</h3>

        <div class="form-group" v-for="(property, pIndex) in fieldSet.properties">
          <label :for="getFieldIndex(fIndex, pIndex)">
            {{window.signs[property.name]}}
          </label>

          <input
            min="0"
            type="number"
            class="form-control"
            v-model="property.value"
            v-if="property.element.type === 'number'"
            :id="getFieldIndex(fIndex, pIndex)"
          >

          <input
            type="text"
            class="form-control"
            v-model="property.value"
            v-if="property.element.type === 'text'"
            :id="getFieldIndex(fIndex, pIndex)"
          >

          <select
            class="form-control"
            v-model="property.value"
            v-if="property.element.type === 'select'"
            :id="getFieldIndex(fIndex, pIndex)"
          >
            <option v-for="(text, value) in property.element.options" :value="value">
              {{window.signs[text]}}
            </option>
          </select>


          <div v-if="property.id === 'datasets'" class="datasets-container">
            <div class="form-check-label dataset-item" v-for="(dataset, index) in cliExportDataSets">
              <input
                :id="getDataSetIndex('dataset2', index)"
                class="form-check-input"
                type="checkbox"
                v-model="dataset.markedForExport"
              >

              <label :for="getDataSetIndex('dataset2', index)">{{dataset.dataset}}</label>
            </div>

            <div class="actions-container">
              <button type="button" @click="setDataSetsExportStatus(true)" class="btn btn-success">
                <%= getText('check_all') %>
              </button>

              <button type="button" @click="setDataSetsExportStatus(false)" class="btn btn-success">
                <%= getText('uncheck_all') %>
              </button>
            </div>
          </div>
        </div>
      </div>

      <div v-show="activeTab === 'assessment'">

        <div class="edit-instructions">
          <button @click.prevent="openCodeMirror" v-show="!editorShown" class="btn btn-success">
            <%= getText("edit_instruction_page_html") %>
          </button>

          <button @click.prevent="closeCodeMirror" v-show="editorShown" class="btn btn-success">
            <%= getText("close_editor") %>
          </button>

          <button @click.prevent="updateInstructions" v-show="editorShown" class="btn btn-primary">
            <%= getText("save_changes") %>
          </button>

          <div v-show="editorShown">
            <textarea id="instructions" v-model="instructions"></textarea>
          </div>
        </div>
      </div>

      <div class="form-group" v-show="activeTab !== 'assessment'">
        <button @click.prevent="updateConfig()" type="submit" class="btn btn-primary">
          <%= getText('submit') %>
        </button>
      </div>
    </form>
  </div>
</div>


<script>
  window.signs = {};

  <% const signs = [
    "config_props.logger",
    "config_props.logger_name",
    "config_props.logger_level",
    "config_props.db",
    "config_props.db_url",
    "config_props.passport",
    "config_props.passport_cookie_age",
    "config_props.passport_cookie_secret",
    "config_props.sites",
    "config_props.sites_datasets",
    "config_props.sites_screenshots_path",
    "config_props.assessment",
    "config_props.assessment_limit",
    "config_props.cliImport",
    "config_props.cliImport_zip_path",
    "config_props.cliExport",
    "config_props.cliExport_datasets",
    "config_props.cliExport_json_path",
    "logger_levels.fatal",
    "logger_levels.error",
    "logger_levels.warn",
    "logger_levels.info",
    "logger_levels.debug",
    "logger_levels.trace",
    "config_updated",
    "instructions_updated",
  ] %>

  <%
    const translations = {};
    signs.forEach(signKey => translations[signKey] = getText(signKey));
  %>

  window.signs = <%- JSON.stringify(translations) %>;

  window.config = <%- JSON.stringify(config) %>;
  window.availableDataSets = <%- JSON.stringify(availableDataSets) %>;
  window.cliExportDataSets = <%- JSON.stringify(cliExportDataSets) %>;
  window.instructions = <%- JSON.stringify(instructionsPageHTML) %>
</script>

<link rel="stylesheet" href="<%= fromPublic('css/lib/codemirror/codemirror.css') %>">
<link rel="stylesheet" href="<%= fromPublic('css/lib/codemirror/mdn-like.css') %>">

<script src="<%= fromPublic('js/lib/codemirror/codemirror.js') %>"></script>
<script src="<%= fromPublic('js/lib/codemirror/xml.js') %>"></script>
<script src="<%= fromPublic('js/lib/codemirror/autorefresh.js') %>"></script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/vue/2.5.13/vue.min.js"></script>

<script src="<%= fromPublic('js/config.js') %>"></script>
